{"version":3,"sources":["./src/app/connector/sqlserver/sqlserver.component.ts","./src/app/connector/sqlserver/sqlserver.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/connector/connector.component.ts","./src/app/connector/connector.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/global-constants.ts","./src/app/endpoint/endpoint.component.ts","./src/app/endpoint/endpoint.component.html","./src/app/connector/mysql/mysql.component.ts","./src/app/connector/mysql/mysql.component.html","./src/app/app.module.ts","./src/app/restservice.service.ts","./src/app/loggedin/loggedin.component.ts","./src/app/loggedin/loggedin.component.html","./src/app/help/help.component.ts","./src/app/help/help.component.html","./src/app/grid-view/grid-view.component.ts","./src/app/grid-view/grid-view.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/support/support.component.ts","./src/app/support/support.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { RestserviceService } from '../../restservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n@Component({\n  selector: 'app-sqlserver',\n  templateUrl: './sqlserver.component.html',\n  styleUrls: ['./sqlserver.component.css']\n})\nexport class SqlserverComponent implements OnInit {\n  @Input() connector: any;\n  isworking = true;\n  showTab1 = true;\n  showTab2: boolean;\n\n  constructor(private restService: RestserviceService) { }\n  @Output() onDataChange: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit(): void {\n    console.log(\"SqlserverComponent: ngOnInit:connector:\", this.connector);\n    this.isworking = false;\n  }\n  showServerTabButton(tab: string) {\n    this.showTab1 = false;\n    this.showTab2 = false;\n\n    if (tab === 'Server') {\n      this.showTab1 = true;\n    }\n    if (tab === 'ConnectionPool') {\n      this.showTab2 = true;\n    }\n  }\n\n  updateConnectionString(): void {\n    // console.log('SqlserverComponent: connectionString');\n    this.connector.connectionString = 'jdbc:sqlserver://' + this.connector.hostname + ':' + this.connector.port + ';databaseName=' + this.connector.database + ';user=' + this.connector.username + ';password=' + this.connector.password + ';';\n  }\n\n  saveConnection(): void {\n    // console.log('SqlserverComponent: saveConnection');\n    this.onDataChange.emit(\"isworking\");\n    this.restService.postConnector(this.connector)\n      .subscribe(data => {\n        this.onDataChange.emit(data);\n      });\n  }\n}\n","<div class=\"section\">\n\t<ul id=\"embossed\" class=\"tabs tabs--embossed\">\n\t\t<li (click)=\"showServerTabButton('Server')\" id=\"embossed-1\" class=\"tab \">\n\t\t\t<a tabindex=\"0\">Server</a>\n\t\t</li>\n\t\t<li (click)=\"showServerTabButton('ConnectionPool')\" id=\"embossed-2\" class=\"tab\">\n\t\t\t<a tabindex=\"0\">Connection Pool</a>\n\t\t</li>\n\t</ul>\n\n\t\n\t<div id=\"embossed-content\" class=\"tab-content\">\n\t\t<div *ngIf=\"showTab1\" id=\"embossed-1-content\" class=\"tab-pane active\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Connector</h2>\n\t\t\t\t<hr>\n\t\t\t\t<form name=\"form\">\n\n\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Host\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.hostname\" [ngModelOptions]=\"{standalone: true}\" required\n\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Host\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.hostname.length < 1}\">Host</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-DatabaseName\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.database\" [ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-DatabaseName\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.database.length < 1}\">Database\n\t\t\t\t\t\t\t\tName</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Port\" (change)=\"updateConnectionString()\" [(ngModel)]=\"connector.port\"\n\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Port\" [ngClass]=\"{'text-danger': connector.port < 1}\">Port</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Username\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.username\" [ngModelOptions]=\"{standalone: true}\" required\n\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Username\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.username < 1}\">Username</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Password\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.password\" [ngModelOptions]=\"{standalone: true}\" required\n\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Password\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.password < 1}\">Password</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-ConnectionString\" [(ngModel)]=\"connector.connectionString\"\n\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-ConnectionString\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionString < 1}\">Connection\n\t\t\t\t\t\t\t\tString</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<button (click)=\"saveConnection()\" class=\"btn btn--ghost\" [disabled]=\"isworking\">Test Connection</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngIf=\"showTab2\" id=\"embossed-2-content\" class=\"tab-pane active\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Connection Pool</h2>\n\t\t\t\t<hr>\n\t\t\t\t<!--  -->\n\n\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-InitialPoolSize\" [(ngModel)]=\"connector.connectionPool.initialPoolSize\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-InitialPoolSize\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.initialPoolSize < 1}\">Initial\n\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-MaxStatements\" [(ngModel)]=\"connector.connectionPool.maxStatements\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-MaxStatements\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.maxStatements < 1}\">Max\n\t\t\t\t\t\t\tStatements</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-MinPoolSize\" [(ngModel)]=\"connector.connectionPool.minPoolSize\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-MinPoolSize\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.minPoolSize < 1}\">Min\n\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-MaxPoolSize\" [(ngModel)]=\"connector.connectionPool.maxPoolSize\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-MaxPoolSize\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.maxPoolSize < 1}\">Max\n\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-AcquireIncrement\" [(ngModel)]=\"connector.connectionPool.acquireIncrement\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-AcquireIncrement\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.acquireIncrement < 1}\">Acquire\n\t\t\t\t\t\t\tIncrement</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-ConnectionTimeout\"\n\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.unreturnedConnectionTimeout\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-ConnectionTimeout\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.unreturnedConnectionTimeout < 1}\">Connection\n\t\t\t\t\t\t\tTimeout</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<button (click)=\"saveConnection()\" class=\"btn btn--ghost\">Save Connection Pool</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\n\nexport class AboutComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('AboutComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { GlobalConstants } from '../global-constants';\n\n\n@Component({\n  selector: 'app-connector',\n  templateUrl: './connector.component.html',\n  styleUrls: ['./connector.component.css']\n})\nexport class ConnectorComponent implements OnInit {\n  isworking = true;\n  isLoggedIn: boolean;\n\n  connector: any = {\n    type: '',\n    version: '',\n    hostname: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    driver: '',\n    connectionString: '',\n    connectionPool: {\n      initialPoolSize: '',\n      minPoolSize: '',\n      acquireIncrement: '',\n      maxPoolSize: '',\n      maxStatements: '',\n      unreturnedConnectionTimeout: ''\n    }\n  };\n  connectorMySql: any;\n  connectorSqlServer: any;\n  myConsole: any = '';\n\n  constructor(private restService: RestserviceService) {\n    console.log('ConnectorComponent : constructor');\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n\n  }\n\n  ngOnInit() {\n    console.log('ConnectorComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n    // get all connectors so you switch between connectors and you don't have to retype everything\n    this.connectorSqlServer = this.getConnectorByServerType('MySQL');\n    this.connectorSqlServer = this.getConnectorByServerType('SQL_Server');\n    // get current connector\n    this.getConnector();\n\n  }\n\n  onOptionsSelected(event: any): void {\n    console.log('ConnectorComponent: onOptionsSelected', event.target.value);\n\n  }\n  getConnector(): void {\n    console.log('ConnectorComponent: getConnector');\n    this.restService.getConnector()\n      .subscribe((data: any) => {\n        // console.log('ConnectorComponent: getConnector', data);\n        this.connector = data;\n        if (this.connector.type === 'MySQL') {\n          this.connectorMySql = this.connector;\n        } else if (this.connector.type === 'SQL_Server') {\n          this.connectorSqlServer = this.connector;\n        } else {\n          this.myConsole = 'Not a valid connector type';\n        }\n        this.isLoggedIn = true;\n        this.isworking = false;\n      });\n  }\n\n  getConnectorByServerType(serverType: string): void {\n    console.log('ConnectorComponent: getConnectorByServerType', serverType);\n    this.restService.getConnectorByServerType(serverType)\n      .subscribe((data: any) => {\n        console.log('ConnectorComponent: getConnectorByServerType', data);\n        if (serverType === 'MySQL') {\n          this.connectorMySql = data;\n        } else if (serverType === 'SQL_Server') {\n          this.connectorSqlServer = data;\n        } else {\n          this.myConsole = 'Not a valid connector type';\n        }\n      });\n  }\n\n  onDataChange(data: any) {\n    console.log('ConnectorComponent: MysqlComponent: onDataChange', data);\n    if (data === 'isworking') {\n      this.myConsole = \"\";\n      this.isworking = true;\n    }\n    else {\n      this.myConsole = data;\n      if (this.myConsole.Exception) {\n        this.myConsole = 'Exception:\\n' + atob(this.myConsole.Exception);\n      } else {\n        this.myConsole = this.myConsole.response;\n      }\n      this.isworking = false;\n    }\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<div *ngIf=\"isLoggedIn\" class=\"container\">\n\t<div *ngIf=\"isworking\" class=\"loader\" aria-label=\"Loading, please wait...\"\n\t\tstyle=\"position: absolute;  width: 70px;  height: 70px;  z-index: 15;  top: 50%;  left: 50%;  margin: -100px 0 0 -150px;\">\n\t\t<div class=\"wrapper\">\n\t\t\t<div class=\"wheel\"></div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Connector</h2>\n\t\t\t\t<hr>\n\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t<div class=\"form-group__text select\">\n\t\t\t\t\t\t<select (change)=\"onOptionsSelected($event)\" [(ngModel)]=\"connector.type\"\n\t\t\t\t\t\t\tid=\"input-type-select\">\n\t\t\t\t\t\t\t<option value=\"MySQL\">MySQL</option>\n\t\t\t\t\t\t\t<option value=\"SQL_Server\">SQL Server</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<!-- <label for=\"input-type-select\">Connector</label> -->\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!--  -->\n\t\t\t\t<hr>\n\t\t\t\t<div *ngIf=\"connector.type === 'MySQL'\">\n\t\t\t\t\t<app-mysql [connector]=\"connectorMySql\" (onDataChange)=\"onDataChange($event)\"></app-mysql>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"connector.type === 'SQL_Server'\">\n\t\t\t\t\t<app-sqlserver [connector]=\"connectorSqlServer\" (onDataChange)=\"onDataChange($event)\"></app-sqlserver>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col\">\n\t\t\t<label for=\"textarea-state-default\">Console</label>\n\t\t\t<div class=\"form-group__text\">\n\t\t\t\t<textarea id=\"textarea-state-default\" class=\"text-white\"\n\t\t\t\t\tstyle=\"background-color: #000000;-webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; width: 100%;\"\n\t\t\t\t\trows=\"41\">{{myConsole}}</textarea>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { RestserviceService } from './restservice.service';\nimport { GlobalConstants } from './global-constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnChanges {\n  title = 'dbConnector';\n  public isLoggedIn = false;\n\n  constructor(private restService: RestserviceService) {\n    this.restService.onLoginChange.subscribe({\n      next: (event: any) => {\n        console.log('AppComponent Received message  ', event);\n        this.isLoggedIn = event;\n        GlobalConstants.isLoggedIn = this.isLoggedIn;\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('AppComponent: ngOnChanges', changes);\n  }\n\n  ngOnInit() {\n    console.log('AppComponent: ngOnInit');\n    this.restService.isAuthenticated();\n  }\n\n\n  loginButton() {\n    console.log('AppComponent: loginButton');\n    if (this.isLoggedIn) {\n      // life is good\n      this.restService.logout();\n      location.assign('/');\n    } else {\n      location.assign('/');\n    }\n  }\n}\n","<nav class=\"header\" id=\"styleguideheader\" role=\"navigation\">\n    <div class=\"container-fluid\">\n        <div class=\"header-panels\">\n            <div class=\"header-panel hidden-md-down\">\n                <a class=\"header__logo\" href=\"http://www.cisco.com\" target=\"_blank\">\n                    <span class=\"icon-cisco\"></span>\n                </a>\n                <h1 class=\"header__title\">\n                    <span routerLink=\"health\">dbConnector</span>\n                </h1>\n            </div>\n            <div class=\"header-panel header-panel--center base-margin-left base-margin-right hidden-lg-up\">\n                <a class=\"header__logo\" href=\"http://www.cisco.com\" target=\"_blank\">\n                    <span class=\"icon-cisco\"></span>\n                </a>\n            </div>\n            <div class=\"header-panel header-panel--right hidden-md-down\">\n                \n                <a *ngIf=\"isLoggedIn\" routerLink=\"connector\" class=\"header-item\">Connector</a>\n                <a *ngIf=\"isLoggedIn\" routerLink=\"endpoint\" class=\"header-item\">Endpoints</a>\n                <a *ngIf=\"isLoggedIn\" routerLink=\"GridView\" class=\"header-item\">Grid View</a>\n                <a routerLink=\"help\" class=\"header-item\">Help</a>\n                <a routerLink=\"support\" class=\"header-item\">Support</a>\n                <a routerLink=\"about\" class=\"header-item\">About</a>\n                <a *ngIf=\"isLoggedIn\"  (click)=\"loginButton()\"  class=\"header-item\">Logout</a>\n                <a *ngIf=\"!isLoggedIn\" (click)=\"loginButton()\" class=\"header-item\">Login</a>\n            </div>\n        </div>\n    </div>\n</nav>\n<router-outlet></router-outlet>","export class GlobalConstants {\n  public static isLoggedIn = false;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-endpoint',\n  templateUrl: './endpoint.component.html',\n  styleUrls: ['./endpoint.component.css']\n})\nexport class EndpointComponent implements OnInit {\n  isworking = true;\n  isLoggedIn: boolean;\n  showTab1 = true;\n  showTab2: boolean;\n  endpoints: any = [];\n  endpoint: any = {};\n  basicAuth: any = {};\n  myConsole: any = '';\n  base64ValuePlaceholder: any = '';\n\n  constructor(private restService: RestserviceService) {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('EndpointComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n    this.myConsole = '';\n    this.getBasicAuth();\n    this.getEndpoints();\n  }\n\n  showServerTabButton(tab: string): void {\n    console.log('EndpointComponent: showServerTabButton');\n    this.myConsole = '';\n    this.showTab1 = false;\n    this.showTab2 = false;\n\n    if (tab === 'tab1') {\n      this.showTab1 = true;\n    }\n    if (tab === 'tab2') {\n      this.showTab2 = true;\n    }\n  }\n\n  addEndpoint(): void {\n    console.log('EndpointComponent: addEndpoint');\n    this.myConsole = '';\n    this.showServerTabButton('tab1');\n    const newEndpoint: any = {};\n    newEndpoint.name = this.uuidv4();\n    newEndpoint.endpoint = '/rest/webexcc/' + newEndpoint.name;\n    newEndpoint.nameValueList = [];\n    this.endpoints.push(newEndpoint);\n    this.endpoint = newEndpoint;\n    this.endpoint.query = 'select ${ani}';\n    this.addNameValuePair({ name: 'ani', value: '1234567890' });\n    this.highlightEndpoint();\n  }\n\n  deleteEndpoint(index: any): void {\n    console.log('EndpointComponent: deleteEndpoint:', index);\n    const answer = window.confirm('Are sure you want to delete this item ?');\n    if (answer) {\n      this.isworking = true;\n      this.myConsole = '';\n      this.restService.deleteEndpoint(this.endpoints[index])\n        .subscribe(data => {\n          this.basicAuth = data;\n          if (this.basicAuth.Exception) {\n            this.myConsole = atob(this.myConsole.Exception);\n          } else {\n            this.myConsole = 'Basic authentication was loaded.\\n';\n          }\n          this.endpoints.splice(index, 1);\n          this.isworking = false;\n        });\n    } else {\n      console.log('EndpointComponent: deleteEndpoint: NOT');\n    }\n  }\n\n\n  addNameValuePair(nameValue: any): void {\n    console.log('EndpointComponent: addNameValue:');\n    this.myConsole = '';\n    this.endpoint.nameValueList.push(nameValue);\n  }\n\n  deleteNameValuePair(index: any): void {\n    console.log('EndpointComponent: deleteNameValuePair:');\n    const answer = window.confirm('Are sure you want to delete this item ?');\n    if (answer) {\n      this.myConsole = '';\n      this.endpoint.nameValueList.splice(index, 1);\n      this.myConsole = 'Name value pair deleted';\n    } else {\n      console.log('EndpointComponent: deleteNameValuePair: NOT');\n    }\n  }\n\n  getBasicAuth(): void {\n    console.log('EndpointComponent: getBasicAuth');\n    this.myConsole = '';\n    this.restService.getBasicAuth()\n      .subscribe(data => {\n        this.basicAuth = data;\n        if (this.basicAuth.Exception) {\n          this.myConsole = atob(this.myConsole.Exception);\n        } else {\n          this.myConsole = 'Basic authentication was loaded.\\n';\n        }\n        this.updateBasicAuthValue();\n      });\n  }\n\n  getEndpoints(): void {\n    console.log('EndpointComponent: getEndpoints');\n    this.myConsole = '';\n    this.restService.getEndpoints()\n      .subscribe(data => {\n        this.endpoints = data;\n        if (this.endpoints.Exception) {\n          this.myConsole = atob(this.myConsole.Exception);\n        } else {\n          this.myConsole += 'Endpoints were loaded.\\n';\n        }\n        if (this.endpoints[0] != null) {\n          this.endpoint = this.endpoints[0];\n          this.endpoint.isHighlighted = true;\n        }\n        this.isLoggedIn = true;\n        this.isworking = false;\n      });\n  }\n\n\n  uuidv4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n\n  saveBasicAuthentication(): void {\n    console.log('EndpointComponent: saveBasicAuthentication');\n    this.isworking = true;\n    this.myConsole = '';\n    this.restService.saveBasicAuthentication(this.basicAuth)\n      .subscribe(data => {\n        this.myConsole = data;\n        if (this.myConsole.Exception) {\n          this.myConsole = 'Exception:\\n' + atob(this.myConsole.Exception);\n        } else {\n          this.myConsole = this.myConsole.response;\n        }\n        this.isworking = false;\n      });\n  }\n\n  isNameValuePairValid(): boolean {\n    let check = true;\n    this.endpoint.nameValueList.forEach((nameValue) => {\n      if (nameValue.name == null || nameValue.name === undefined || nameValue.name.length < 1) {\n        alert('Invalid name value pair:\\n Name can\\'t be blank.');\n        check = false;\n      } else if (!isNaN(nameValue.name)) {\n        alert('Invalid name value pair:\\nName can\\'t be a number.');\n        check = false;\n      } else if (/^[0-9-]/.test(nameValue.name)) {\n        alert('Invalid name value pair:\\nName can\\'t start with a number or dash');\n        check = false;\n      } else if (/[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,.<>\\/?]/g.test(nameValue.name)) {\n        alert('Invalid name value pair:\\nName can only contain the following characters be a-z A-Z 0-9.');\n        check = false;\n      }\n    });\n    return check;\n  }\n\n\n  saveEndpointAndTest(): void {\n    console.log('EndpointComponent: saveEndpointAndTest');\n    this.myConsole = '';\n    this.endpoint.isHighlighted = undefined;\n    if (!this.isNameValuePairValid()) {\n      return;\n    }\n    this.isworking = true;\n\n    this.restService.saveEndpointAndTest(this.endpoint)\n      .subscribe(data => {\n        this.myConsole = data;\n        if (this.myConsole.Exception) {\n          this.myConsole = 'Exception:\\n' + atob(this.myConsole.Exception);\n        } else {\n          const response = this.myConsole.response;\n          const params = atob(this.myConsole.httpParams);\n          const sqlStatement = atob(this.myConsole.sqlStatement);\n          const authentication = this.myConsole.authentication;\n          const jsonResponse = atob(this.myConsole.jsonResponse);\n          this.myConsole = response + '\\n';\n          this.myConsole += 'Endpoint authentication is active:' + authentication + '\\n';\n          this.myConsole += 'Request:\\n';\n          this.myConsole += location.origin + this.endpoint.endpoint + params + '\\n';\n          this.myConsole += 'Response:\\n';\n          this.myConsole += jsonResponse + '\\n';\n          this.myConsole += 'SQL:\\n';\n          this.myConsole += sqlStatement + '\\n';\n        }\n        this.endpoint.isHighlighted = true;\n        this.isworking = false;\n      });\n  }\n\n  updateBasicAuthValue(): void {\n    console.log('EndpointComponent: basicAuthValue');\n    this.myConsole = '';\n    if (this.basicAuth.username.length < 12 || this.basicAuth.password.length < 12) {\n      this.base64ValuePlaceholder = 'username and password must be 12 charactors';\n      this.basicAuth.value = '';\n    } else {\n      this.basicAuth.value = btoa(this.basicAuth.username + ':' + this.basicAuth.password);\n    }\n  }\n\n  selectEndpoint(endpoint: any): void {\n    console.log('EndpointComponent: selectEndpoint');\n    this.myConsole = '';\n    this.endpoint = endpoint;\n    this.highlightEndpoint();\n  }\n\n  setBasicAuthenticationRequired(event: any): void {\n    console.log('EndpointComponent: setBasicAuthenticationRequired');\n    this.saveBasicAuthentication();\n  }\n\n  highlightEndpoint(): void {\n    console.log('EndpointComponent: highlightEndpoint');\n    this.endpoints.forEach((endpoint: any) => {\n      // console.warn('endpoint:', endpoint);\n      endpoint.isHighlighted = false;\n    });\n    this.endpoint.isHighlighted = true;\n  }\n\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<div *ngIf=\"isLoggedIn\" class=\"container\">\n\t<div *ngIf=\"isworking\" class=\"loader\" aria-label=\"Loading, please wait...\"\n\t\tstyle=\"position: absolute;  width: 70px;  height: 70px;  z-index: 15;  top: 50%;  left: 50%;  margin: -100px 0 0 -150px;\">\n\t\t<div class=\"wrapper\">\n\t\t\t<div class=\"wheel\"></div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div   *ngIf=\"endpoints.length > 0\"   class=\"col\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Endpoints</h2>\n\t\t\t\t<hr>\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\n\t\t\t\t\t\t<div class=\"form-group__check\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"form-check-input\" id=\"BasicAuthenticationisRequired\"\n\t\t\t\t\t\t\t\t[checked]=\"basicAuth.isBasicAuthenticationRequired\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"basicAuth.isBasicAuthenticationRequired\" \n\t\t\t\t\t\t\t\t(change)=\"setBasicAuthenticationRequired($event);showServerTabButton('tab1'); \"\n\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"BasicAuthenticationisRequired\">Basic Authentication is\n\t\t\t\t\t\t\t\tRequired</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul id=\"embossed\" class=\"tabs tabs--embossed\">\n\t\t\t\t\t\t<li (click)=\"showServerTabButton('tab1')\" id=\"embossed-1\" class=\"tab \">\n\t\t\t\t\t\t\t<a tabindex=\"0\">Endpoint</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li *ngIf=\"basicAuth.isBasicAuthenticationRequired\" (click)=\"showServerTabButton('tab2')\" id=\"embossed-2\" class=\"tab\">\n\t\t\t\t\t\t\t<a tabindex=\"0\">Authentication</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div id=\"embossed-content\" class=\"tab-content\">\n\t\t\t\t\t\t<div *ngIf=\"showTab1\" id=\"embossed-1-content\" class=\"tab-pane active\">\n\t\t\t\t\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t\t\t\t\t<!-- <h2 class=\"subtitle\">Endpoint</h2> -->\n\t\t\t\t\t\t\t\t<!-- <hr> -->\n\t\t\t\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-endpoint\" [(ngModel)]=\"endpoint.endpoint\" readonly\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-endpoint\">endpoint</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Description\" [(ngModel)]=\"endpoint.description\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\taria-placeholder=\"Enter description\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Description\">Description</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t\t\t<!-- <div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 class=\"subtitle\">Name Value List</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"addNameValuePair({})\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn--link \">[+]</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-4 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-2 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tparameters\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-4 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tValue\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngFor=\"let nameValue of endpoint.nameValueList; index as i;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"deleteNameValuePair(i)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn--link btn-sm\">[-]</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-NamePair_name{{i}}\" [(ngModel)]=\"nameValue.name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-ValuePair_value{{i}}\" [(ngModel)]=\"nameValue.value\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Query\" [(ngModel)]=\"endpoint.query\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Query\">Query</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Username\">Console</label>\n\t\t\t\t\t\t\t\t\t\t<textarea id=\"textarea-state-default\" class=\"text-white\" readonly\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"background-color: #000000;width: 100%;\"\n\t\t\t\t\t\t\t\t\t\t\trows=\"8\">{{myConsole}}</textarea>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"saveEndpointAndTest()\" class=\"btn btn--ghost\" [disabled]=\"isworking\" >Save and Test\n\t\t\t\t\t\t\t\t\t\t\tEndpoint</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngIf=\"showTab2\" id=\"embossed-2-content\" class=\"tab-pane active\">\n\t\t\t\t\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t\t\t\t\t<h2 class=\"subtitle\">Basic Authentication for Endpoints</h2>\n\t\t\t\t\t\t\t\tApplies to all endpoints\n\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Username\" placeholder=\"must be atleast 12 charactors\"\n\t\t\t\t\t\t\t\t\t\t\t(change)=\"updateBasicAuthValue()\" [(ngModel)]=\"basicAuth.username\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Username\">Username</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Password\" placeholder=\"must be atleast 12 charactors\"\n\t\t\t\t\t\t\t\t\t\t\t(change)=\"updateBasicAuthValue()\" [(ngModel)]=\"basicAuth.password\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Password\">Password</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Base64Value\" placeholder=\"{{base64ValuePlaceholder}}\"\n\t\t\t\t\t\t\t\t\t\t\t(change)=\"updateBasicAuthValue()\" [(ngModel)]=\"basicAuth.value\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\" readonly>\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Base64Value\">Base64 Value</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"saveBasicAuthentication()\" class=\"btn btn--ghost\">Save Basic\n\t\t\t\t\t\t\t\t\t\t\tAuthentication</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<h4>Current Endpoints</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<label><button (click)=\"addEndpoint()\" class=\"btn btn--ghost\">add</button></label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<!-- space -->\n\t\t\t\t\t<hr>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<div \n\t\t\t\t\t[ngClass]=\"{'bg-primary': endpoint.isHighlighted === true}\"\n\t\t\t\t\t*ngFor=\"let endpoint of endpoints; index as i;\" (click)=\"selectEndpoint(endpoint)\">\n\t\t\t\t\t\t<div (click)=\"deleteEndpoint(i)\" class=\"alert__icon icon-error-outline\"> </div>\n\t\t\t\t\t\t{{endpoint.endpoint}}<br>\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{endpoint.description}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { Injectable, Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { RestserviceService } from '../../restservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n@Component({\n  selector: 'app-mysql',\n  templateUrl: './mysql.component.html',\n  styleUrls: ['./mysql.component.css']\n})\n\nexport class MysqlComponent implements OnInit {\n  @Input() connector: any;\n  isworking = true;\n  showTab1 = true;\n  showTab2: boolean;\n\n  constructor(private restService: RestserviceService) { }\n  @Output() onDataChange: EventEmitter<any> = new EventEmitter();\n\n  ngOnInit(): void {\n    console.log(\"MysqlComponent: ngOnInit:connector:\", this.connector);\n    this.isworking = false;\n  }\n  showServerTabButton(tab: string) {\n    this.showTab1 = false;\n    this.showTab2 = false;\n\n    if (tab === 'Server') {\n      this.showTab1 = true;\n    }\n    if (tab === 'ConnectionPool') {\n      this.showTab2 = true;\n    }\n  }\n\n  updateConnectionString(): void {\n    // console.log('MysqlComponent: connectionString');\n    this.connector.connectionString = 'jdbc:mysql://' + this.connector.hostname + ':' + this.connector.port + '/' + this.connector.database + '?serverTimezone=UTC&useLegacyDatetimeCode=false&useSSL=FALSE&user=' + this.connector.username + '&password=' + this.connector.password + '';\n  }\n\n  saveConnection(): void {\n    // console.log('MysqlComponent: saveConnection');\n    this.onDataChange.emit(\"isworking\");\n    this.restService.postConnector(this.connector)\n      .subscribe(data => {\n        this.onDataChange.emit(data);\n      });\n  }\n}\n","<div class=\"section\">\n\t<ul id=\"embossed\" class=\"tabs tabs--embossed\">\n\t\t<li (click)=\"showServerTabButton('Server')\" id=\"embossed-1\" class=\"tab \">\n\t\t\t<a tabindex=\"0\">Server</a>\n\t\t</li>\n\t\t<li (click)=\"showServerTabButton('ConnectionPool')\" id=\"embossed-2\" class=\"tab\">\n\t\t\t<a tabindex=\"0\">Connection Pool</a>\n\t\t</li>\n\t</ul>\n\n\t\n\t<div id=\"embossed-content\" class=\"tab-content\">\n\t\t<div *ngIf=\"showTab1\" id=\"embossed-1-content\" class=\"tab-pane active\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Connector</h2>\n\t\t\t\t<hr>\n\t\t\t\t<form name=\"form\">\n\n\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Host\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.hostname\" [ngModelOptions]=\"{standalone: true}\" required\n\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Host\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.hostname.length < 1}\">Host</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-DatabaseName\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.database\" [ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-DatabaseName\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.database.length < 1}\">Database\n\t\t\t\t\t\t\t\tName</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Port\" (change)=\"updateConnectionString()\" [(ngModel)]=\"connector.port\"\n\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Port\" [ngClass]=\"{'text-danger': connector.port < 1}\">Port</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Username\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.username\" [ngModelOptions]=\"{standalone: true}\" required\n\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Username\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.username < 1}\">Username</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-Password\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.password\" [ngModelOptions]=\"{standalone: true}\" required\n\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-Password\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.password < 1}\">Password</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<input id=\"input-type-ConnectionString\" [(ngModel)]=\"connector.connectionString\"\n\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t<label for=\"input-type-ConnectionString\"\n\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionString < 1}\">Connection\n\t\t\t\t\t\t\t\tString</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t<button (click)=\"saveConnection()\" class=\"btn btn--ghost\" [disabled]=\"isworking\">Test Connection</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t\t<div *ngIf=\"showTab2\" id=\"embossed-2-content\" class=\"tab-pane active\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Connection Pool</h2>\n\t\t\t\t<hr>\n\t\t\t\t<!--  -->\n\n\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-InitialPoolSize\" [(ngModel)]=\"connector.connectionPool.initialPoolSize\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-InitialPoolSize\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.initialPoolSize < 1}\">Initial\n\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-MaxStatements\" [(ngModel)]=\"connector.connectionPool.maxStatements\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-MaxStatements\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.maxStatements < 1}\">Max\n\t\t\t\t\t\t\tStatements</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-MinPoolSize\" [(ngModel)]=\"connector.connectionPool.minPoolSize\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-MinPoolSize\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.minPoolSize < 1}\">Min\n\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-MaxPoolSize\" [(ngModel)]=\"connector.connectionPool.maxPoolSize\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-MaxPoolSize\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.maxPoolSize < 1}\">Max\n\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-AcquireIncrement\" [(ngModel)]=\"connector.connectionPool.acquireIncrement\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-AcquireIncrement\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.acquireIncrement < 1}\">Acquire\n\t\t\t\t\t\t\tIncrement</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<input id=\"input-type-ConnectionTimeout\"\n\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.unreturnedConnectionTimeout\"\n\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t<label for=\"input-type-ConnectionTimeout\"\n\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.unreturnedConnectionTimeout < 1}\">Connection\n\t\t\t\t\t\t\tTimeout</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!--  -->\n\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t<button (click)=\"saveConnection()\" class=\"btn btn--ghost\">Save Connection Pool</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppComponent } from './app.component';\nimport { ConnectorComponent } from './connector/connector.component';\nimport { EndpointComponent } from './endpoint/endpoint.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HelpComponent } from './help/help.component';\nimport { SupportComponent } from './support/support.component';\nimport { AboutComponent } from './about/about.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoggedinComponent } from './loggedin/loggedin.component';\nimport { GridViewComponent } from './grid-view/grid-view.component';\nimport { SqlserverComponent } from './connector/sqlserver/sqlserver.component';\nimport { MysqlComponent } from './connector/mysql/mysql.component';\n// import { GlobalConstants } from './global-constants';\n\n\n@NgModule({\n  declarations: [\n    // GlobalConstants,\n    AppComponent,\n    ConnectorComponent,\n    EndpointComponent,\n    LogoutComponent,\n    HelpComponent,\n    SupportComponent,\n    AboutComponent,\n    LoginComponent,\n    LoggedinComponent,\n    GridViewComponent,\n    SqlserverComponent,\n    MysqlComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: '', component: AppComponent },\n      { path: 'logout', component: LogoutComponent },\n      { path: 'help', component: HelpComponent },\n      { path: 'support', component: SupportComponent },\n      { path: 'about', component: AboutComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'connector', component: ConnectorComponent },\n      { path: 'endpoint', component: EndpointComponent },\n      { path: 'loggedin', component: LoggedinComponent },\n      { path: 'GridView', component: GridViewComponent },\n    ]),\n  ],\n  exports: [RouterModule],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n// import { HttpClient, , HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, Subject } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n// import { Location } from '@angular/common';\n// import { Router } from '@angular/router';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({\n//     'Set-Cookie': 'SameSite=Strict; Secure',\n//   })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestserviceService {\n\n  constructor(private http: HttpClient) { }\n  public static isLoggedIn = false;\n  public onLoginChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\n\n\n  public logout() {\n    console.log('RestserviceService: mylogout');\n    return this.http.get<any[]>('/mylogout').subscribe(response => {\n        RestserviceService.isLoggedIn = false;\n        this.onLoginChange.emit(RestserviceService.isLoggedIn);\n    });\n  }\n\n\n  public getUser() {\n    console.log('RestserviceService: getUser');\n    return this.http.get<any[]>('/user').pipe(\n      //catchError(this.handleError)\n    );\n  }\n\n  public isAuthenticated() {\n    console.log('RestserviceService: isAuthenticated');\n    this.getUser().subscribe(data => {\n      // console.warn('restService.getUser:1', data);\n      if (data == null) {\n        RestserviceService.isLoggedIn = false;\n      } else {\n        const response: any = data;\n        // console.log('RestserviceService.getUser: data', data, response);\n        if (response === true) {\n          // console.log('RestserviceService: isAuthenticated: YES');\n          RestserviceService.isLoggedIn = true;\n          // this.onLoginChange.emit(true);\n        } else {\n          // console.log('RestserviceService: isAuthenticated: NO');\n          RestserviceService.isLoggedIn = false;\n        }\n      }\n      this.onLoginChange.emit(RestserviceService.isLoggedIn);\n    });\n  }\n\n  public getIsLoggedIn(): boolean {\n    console.log('RestserviceService: getIsLoggedIn');\n    return RestserviceService.isLoggedIn;\n  }\n\n\n  public getConnector() {\n    return this.http.get<any[]>('/rest/connector').pipe(\n      catchError(this.handleError)\n    );\n  }\n  public getConnectorByServerType(serverType: string) {\n    return this.http.get<any[]>('/rest/connector/' + serverType).pipe(\n      catchError(this.handleError)\n    );\n  }\n  public postConnector(connector: any) {\n    return this.http.post<any[]>('/rest/connector', connector).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public getBasicAuth() {\n    return this.http.get<any[]>('/rest/basicauth').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public getEndpoints() {\n    return this.http.get<any[]>('/rest/endpoints').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  public executeEndPoint(endpointName: any) {\n    return this.http.get<any[]>('/rest/webexcc/' + endpointName).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public saveBasicAuthentication(basicAuth: any) {\n    return this.http.post<any[]>('/rest/basicauth', basicAuth).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public saveEndpointAndTest(endpoint: any) {\n    return this.http.post<any[]>('/rest/endpoint', endpoint).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public deleteEndpoint(endpoint: any) {\n    return this.http.delete<any[]>('/rest/endpoint/' + endpoint.name).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.warn('RestserviceService: private handleError: 1 :', error);\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.warn('RestserviceService: private handleError: 2:', error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.warn('RestserviceService: private handleError: 3 :Backend returned code ' + error.status + ' ' + 'body was: ' + error.error);\n      if (error.status === 0) {\n        console.warn('RestserviceService: private handleError: 3b redirect to /login');\n        location.assign('/oauth2/authorization/dbconnector');\n      }\n    }\n    // Return an observable with a user-facing error message.\n    return throwError('{\"Exception\":\" ' + window.btoa('Something bad happened; please try again later.') + '\"}');\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-loggedin',\n  templateUrl: './loggedin.component.html',\n  styleUrls: ['./loggedin.component.css']\n})\n\nexport class LoggedinComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>loggedin works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\n\nexport class HelpComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('HelpComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>help works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-grid-view',\n  templateUrl: './grid-view.component.html',\n  styleUrls: ['./grid-view.component.css']\n})\nexport class GridViewComponent implements OnInit {\n  isLoggedIn: boolean;\n  endPoint: any = [];\n  endpoints: any = [];\n  endpoint: any = {};\n  basicAuth: any = {};\n  selectedEndPoint = '';\n  records: any = [{}];\n  headers: any = [];\n  isworking = true;\n\n  constructor(private restService: RestserviceService) {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    this.getBasicAuth();\n    this.getEndpoints();\n\n  }\n  getBasicAuth(): void {\n    console.log('GridViewComponent: getBasicAuth');\n    this.restService.getBasicAuth()\n      .subscribe(data => {\n        this.basicAuth = data;\n      });\n  }\n\n  getEndpoints(): void {\n    console.log('GridViewComponent: getEndpoints');\n    this.restService.getEndpoints()\n      .subscribe(data => {\n        this.endpoints = data;\n        console.log('GridViewComponent: getEndpoints', this.endpoints);\n        this.isLoggedIn = true;\n        this.isworking = false;\n      });\n  }\n  executeEndPoint(event: any) {\n    console.log('GridViewComponent: executeEndPoint', event.target.value);\n    let tmp: any = [];\n    this.records = [];\n    this.restService.executeEndPoint(event.target.value)\n      .subscribe(data => {\n        const check: any = data;\n        if (check.length > 0) {\n          tmp = data;\n        } else {\n          tmp.push(data);\n        }\n        let count = 0;\n        tmp.forEach((element: {}) => {\n          if (count++ === 0) {\n            this.headers = Object.keys(element);\n          }\n          this.records.push(Object.values(element));\n          console.log('GridViewComponent: executeEndPoint: this.records4: ', Object.values(element));\n        });\n\n      });\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"container\">\n\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n    </div>\n    <div class=\"col-sm\">\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <label class=\"input-group-text\" for=\"inputGroupSelect01\">Select endPoint</label>\n        </div>\n        <select (change)=\"executeEndPoint($event)\" [(ngModel)]=\"selectedEndPoint\" id=\"input-type-select\">\n          <option value=\"Choose\">Choose...</option>\n          <option *ngFor=\"let endpoint of endpoints; index as i;\" value=\"{{endpoint.name}}\">{{endpoint.description}}\n          </option>\n        </select>\n\n      </div>\n    </div>\n    <div class=\"col-sm\">\n    </div>\n  </div>\n  <p>&nbsp;</p>\n  <div class=\"row text-left\">\n    <div class=\"col\">&nbsp;</div>\n    <div class=\"col\">\n      <table *ngIf=\"headers.length > 0\" class=\"table table--lined table--selectable\" aria-label=\"Selectable rows table example\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th *ngFor=\"let header of headers;\" scope=\"col\">{{header}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let record of records; index as i;\">\n            <th scope=\"row\">{{(i + 1)}}</th>\n          <td *ngFor=\"let column of record; index as i2;\">{{column}} </td>\n          </tr>\n\n        </tbody>\n      </table>\n    </div>\n    <div class=\"col\">&nbsp;</div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n  isLoggedIn: boolean;\n  message: any;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n\n  }\n\n  ngOnInit() {\n    console.log('LogoutComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n    this.message = '';\n  }\n\n  myLogout(): void {\n    console.log('LogoutComponent: myLogout');\n    window.location.href = '/oauthLogout' ;\n\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<section *ngIf=\"message.length == 0\" class=\"text-center\">\n\t<form>\n\t\t<h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n\t\t<input name=\"_csrf\" type=\"hidden\" value=\"${_csrf.token}\">\n\t\t<button (click)=\"myLogout()\" class=\"btn btn-lg btn-primary btn-block\" type=\"button\">Log Out</button>\n\t</form>\n</section>\n<section *ngIf=\"message.length > 0\" class=\"text-center\">\n\t{{message}}\n</section>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  clickMe(event: Event) {\n    console.log('clickMe', event);\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<section class=\"h-100\">\n\t<header class=\"container h-100\">\n\t\t<div class=\"d-flex align-items-center justify-content-center h-100\">\n\t\t\t<div class=\"d-flex flex-column\">\n\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t<h2 class=\"subtitle\"></h2>\n\t\t\t\t\t<div class=\"section\">\n\t\t\t\t\t\t<button class=\"btn btn--ghost\" (click)=\"clickMe($event)\">Login</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</header>\n</section>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.css']\n})\n\nexport class SupportComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('SupportComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>support works!</p>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}