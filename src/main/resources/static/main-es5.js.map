{"version":3,"sources":["webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/connector/connector.component.ts","webpack:///src/app/connector/connector.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/global-constants.ts","webpack:///src/app/endpoint/endpoint.component.ts","webpack:///src/app/endpoint/endpoint.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/restservice.service.ts","webpack:///src/app/loggedin/loggedin.component.ts","webpack:///src/app/loggedin/loggedin.component.html","webpack:///src/app/help/help.component.ts","webpack:///src/app/help/help.component.html","webpack:///src/app/grid-view/grid-view.component.ts","webpack:///src/app/grid-view/grid-view.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/main.ts","webpack:///src/app/support/support.component.ts","webpack:///src/app/support/support.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AboutComponent","isLoggedIn","console","log","selector","templateUrl","styleUrls","ConnectorComponent","restService","isworking","showTab1","connector","type","version","hostname","port","database","username","password","driver","connectionString","connectionPool","initialPoolSize","minPoolSize","acquireIncrement","maxPoolSize","maxStatements","unreturnedConnectionTimeout","myConsole","getConnector","tab","showTab2","subscribe","data","connectorMySql","connectorSqlServer","getConnectorByServerType","serverType","event","target","value","postConnector","Exception","atob","response","environment","production","AppComponent","title","onLoginChange","next","changes","isAuthenticated","logout","location","assign","GlobalConstants","EndpointComponent","endpoints","endpoint","basicAuth","base64ValuePlaceholder","getBasicAuth","getEndpoints","showServerTabButton","newEndpoint","name","uuidv4","nameValueList","push","query","addNameValuePair","highlightEndpoint","index","answer","window","confirm","deleteEndpoint","splice","nameValue","updateBasicAuthValue","isHighlighted","replace","c","r","Math","random","v","toString","saveBasicAuthentication","check","forEach","undefined","length","alert","isNaN","test","isNameValuePairValid","saveEndpointAndTest","params","httpParams","sqlStatement","authentication","jsonResponse","origin","btoa","AppModule","forRoot","path","component","declarations","imports","exports","providers","bootstrap","RestserviceService","http","get","emit","pipe","getUser","handleError","post","endpointName","error","warn","ErrorEvent","status","providedIn","LoggedinComponent","HelpComponent","GridViewComponent","endPoint","selectedEndPoint","records","headers","tmp","executeEndPoint","count","element","Object","keys","values","LogoutComponent","message","href","LoginComponent","router","clickMe","bootstrapModule","err","SupportComponent","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\n\nexport class AboutComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('AboutComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-connector',\n  templateUrl: './connector.component.html',\n  styleUrls: ['./connector.component.css']\n})\nexport class ConnectorComponent implements OnInit {\n  isworking = true;\n  isLoggedIn: boolean;\n  showTab1 = true;\n  showTab2: boolean;\n  connector: any = {\n    type: '',\n    version: '',\n    hostname: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    driver: '',\n    connectionString: '',\n    connectionPool: {\n      initialPoolSize: '',\n      minPoolSize: '',\n      acquireIncrement: '',\n      maxPoolSize: '',\n      maxStatements: '',\n      unreturnedConnectionTimeout: ''\n    }\n  };\n  connectorMySql: any;\n  connectorSqlServer: any;\n  myConsole: any = '';\n\n  constructor(private restService: RestserviceService) {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('ConnectorComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n    this.getConnector();\n  }\n\n  showServerTabButton(tab: string) {\n    this.showTab1 = false;\n    this.showTab2 = false;\n\n    if (tab === 'Server') {\n      this.showTab1 = true;\n    }\n    if (tab === 'ConnectionPool') {\n      this.showTab2 = true;\n    }\n  }\n\n  getConnector(): void {\n    console.log('ConnectorComponent: getConnector');\n    this.restService.getConnector()\n      .subscribe((data: any) => {\n        // console.log('ConnectorComponent: getConnector', data);\n        this.connector = data;\n        if (this.connector.type === 'MySQL') {\n          this.connectorMySql = this.connector;\n        } else if (this.connector.type === 'SQL_Server') {\n          this.connectorSqlServer = this.connector;\n        } else {\n          this.myConsole = 'Not a valid connector type';\n        }\n        // get old connectors so you don't have to retype everything\n        if (!this.connectorMySql) {\n          this.connectorSqlServer = this.getConnectorByServerType('MySQL');\n        }\n        if (!this.connectorSqlServer) {\n          this.connectorSqlServer = this.getConnectorByServerType('SQL_Server');\n        }\n        this.isLoggedIn = true;\n        this.isworking = false;\n      });\n  }\n\n\n  getConnectorByServerType(serverType: string): void {\n    console.log('ConnectorComponent: getConnectorByServerType');\n    this.restService.getConnectorByServerType(serverType)\n      .subscribe((data: any) => {\n        // console.log('ConnectorComponent: getConnectorByServerType', data);\n        if (serverType === 'MySQL') {\n          this.connectorMySql = data;\n        } else if (serverType === 'SQL_Server') {\n          this.connectorSqlServer = data;\n        } else {\n          this.myConsole = 'Not a valid connector type';\n        }\n      });\n  }\n  onOptionsSelected(event: any): void {\n    console.log('ConnectorComponent: onOptionsSelected', event.target.value);\n    if (event.target.value === 'MySQL') {\n      this.connector = this.connectorMySql;\n    } else if (event.target.value === 'SQL_Server') {\n      this.connector = this.connectorSqlServer;\n    } else {\n      this.myConsole = 'Not a valid connector type';\n    }\n  }\n\n  saveConnection(): void {\n    console.log('ConnectorComponent: saveConnection');\n    this.isworking = true;\n    this.myConsole = '';\n    this.restService.postConnector(this.connector)\n      .subscribe(data => {\n        this.myConsole = data;\n        if (this.myConsole.Exception) {\n          this.myConsole = 'Exception:\\n' + atob(this.myConsole.Exception);\n        } else {\n          this.myConsole = this.myConsole.response;\n        }\n        this.isworking = false;\n      });\n  }\n\n  updateConnectionString(): void {\n    console.log('ConnectorComponent: connectionString');\n    if (this.connector.type === 'MySQL') {\n      // tslint:disable-next-line: max-line-length\n      this.connector.connectionString = 'jdbc:mysql://' + this.connector.hostname + ':' + this.connector.port + '/' + this.connector.database + '?serverTimezone=UTC&useLegacyDatetimeCode=false&useSSL=FALSE&user=' + this.connector.username + '&password=' + this.connector.password + '';\n    } else if (this.connector.type === 'SQL_Server') {\n      // tslint:disable-next-line: max-line-length\n      this.connector.connectionString = 'jdbc:sqlserver://' + this.connector.hostname + ':' + this.connector.port + ';databaseName=' + this.connector.database + ';user=' + this.connector.username + ';password=' + this.connector.password + ';';\n    } else {\n      this.myConsole = 'Not a valid connector type';\n    }\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<div *ngIf=\"isLoggedIn\" class=\"container\">\n\t<div *ngIf=\"isworking\" class=\"loader\" aria-label=\"Loading, please wait...\"\n\t\tstyle=\"position: absolute;  width: 70px;  height: 70px;  z-index: 15;  top: 50%;  left: 50%;  margin: -100px 0 0 -150px;\">\n\t\t<div class=\"wrapper\">\n\t\t\t<div class=\"wheel\"></div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Connector</h2>\n\t\t\t\t<hr>\n\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t<div class=\"form-group__text select\">\n\t\t\t\t\t\t<select (change)=\"onOptionsSelected($event)\" [(ngModel)]=\"connector.type\" id=\"input-type-select\">\n\t\t\t\t\t\t\t<option value=\"MySQL\">MySQL</option>\n\t\t\t\t\t\t\t<option value=\"SQL_Server\">SQL Server</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<!-- <label for=\"input-type-select\">Connector</label> -->\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!--  -->\n\t\t\t\t<hr>\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<ul id=\"embossed\" class=\"tabs tabs--embossed\">\n\t\t\t\t\t\t<li (click)=\"showServerTabButton('Server')\" id=\"embossed-1\" class=\"tab \">\n\t\t\t\t\t\t\t<a tabindex=\"0\">Server</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li (click)=\"showServerTabButton('ConnectionPool')\" id=\"embossed-2\" class=\"tab\">\n\t\t\t\t\t\t\t<a tabindex=\"0\">Connection Pool</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div id=\"embossed-content\" class=\"tab-content\" >\n\t\t\t\t\t\t<div *ngIf=\"showTab1\" id=\"embossed-1-content\" class=\"tab-pane active\">\n\t\t\t\t\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t\t\t\t\t<h2 class=\"subtitle\">Connector</h2>\n\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t<form name=\"form\" >\n\n\t\t\t\t\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Host\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.hostname\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\t\t\t\t\t\trequired type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Host\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.hostname.length < 1}\">Host</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-DatabaseName\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.database\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-DatabaseName\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.database.length < 1}\">Database\n\t\t\t\t\t\t\t\t\t\t\t\tName</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Port\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.port\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\t\t\t\t\t\trequired type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Port\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.port < 1}\">Port</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Username\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.username\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\t\t\t\t\t\trequired type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Username\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.username < 1}\">Username</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Password\" (change)=\"updateConnectionString()\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.password\" [ngModelOptions]=\"{standalone: true}\"\n\t\t\t\t\t\t\t\t\t\t\t\trequired type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.password < 1}\">Password</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-ConnectionString\"\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionString\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-ConnectionString\"\n\t\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionString < 1}\">Connection\n\t\t\t\t\t\t\t\t\t\t\t\tString</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"saveConnection()\" class=\"btn btn--ghost\" [disabled]=\"isworking\">Test\n\t\t\t\t\t\t\t\t\t\t\t\tConnection</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngIf=\"showTab2\" id=\"embossed-2-content\" class=\"tab-pane active\">\n\t\t\t\t\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t\t\t\t\t<h2 class=\"subtitle\">Connection Pool</h2>\n\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t<!--  -->\n\n\t\t\t\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-InitialPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.initialPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-InitialPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.initialPoolSize < 1}\">Initial\n\t\t\t\t\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-MaxStatements\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.maxStatements\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-MaxStatements\"\n\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.maxStatements < 1}\">Max\n\t\t\t\t\t\t\t\t\t\t\tStatements</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-MinPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.minPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-MinPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.minPoolSize < 1}\">Min\n\t\t\t\t\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-MaxPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.maxPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-MaxPoolSize\"\n\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.maxPoolSize < 1}\">Max\n\t\t\t\t\t\t\t\t\t\t\tPool Size</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-AcquireIncrement\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.acquireIncrement\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-AcquireIncrement\"\n\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.acquireIncrement < 1}\">Acquire\n\t\t\t\t\t\t\t\t\t\t\tIncrement</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-ConnectionTimeout\"\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"connector.connectionPool.unreturnedConnectionTimeout\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" required type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-ConnectionTimeout\"\n\t\t\t\t\t\t\t\t\t\t\t[ngClass]=\"{'text-danger': connector.connectionPool.unreturnedConnectionTimeout < 1}\">Connection\n\t\t\t\t\t\t\t\t\t\t\tTimeout</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"saveConnection()\" class=\"btn btn--ghost\">Save Connection\n\t\t\t\t\t\t\t\t\t\t\tPool</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col\">\n\t\t\t<label for=\"textarea-state-default\">Console</label>\n\t\t\t<div class=\"form-group__text\">\n\t\t\t\t<textarea id=\"textarea-state-default\" class=\"text-white\"\n\t\t\t\t\tstyle=\"background-color: #000000;-webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; width: 100%;\"\n\t\t\t\t\trows=\"41\">{{myConsole}}</textarea>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { RestserviceService } from './restservice.service';\nimport { GlobalConstants } from './global-constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnChanges {\n  title = 'dbConnector';\n  public isLoggedIn = false;\n\n  constructor(private restService: RestserviceService) {\n    this.restService.onLoginChange.subscribe({\n      next: (event: any) => {\n        console.log('AppComponent Received message  ', event);\n        this.isLoggedIn = event;\n        GlobalConstants.isLoggedIn = this.isLoggedIn;\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('AppComponent: ngOnChanges', changes);\n  }\n\n  ngOnInit() {\n    console.log('AppComponent: ngOnInit');\n    this.restService.isAuthenticated();\n  }\n\n\n  loginButton() {\n    console.log('AppComponent: loginButton');\n    if (this.isLoggedIn) {\n      // life is good\n      this.restService.logout();\n      location.assign('/');\n    } else {\n      location.assign('/');\n    }\n  }\n}\n","<nav class=\"header\" id=\"styleguideheader\" role=\"navigation\">\n    <div class=\"container-fluid\">\n        <div class=\"header-panels\">\n            <div class=\"header-panel hidden-md-down\">\n                <a class=\"header__logo\" href=\"http://www.cisco.com\" target=\"_blank\">\n                    <span class=\"icon-cisco\"></span>\n                </a>\n                <h1 class=\"header__title\">\n                    <span routerLink=\"health\">dbConnector</span>\n                </h1>\n            </div>\n            <div class=\"header-panel header-panel--center base-margin-left base-margin-right hidden-lg-up\">\n                <a class=\"header__logo\" href=\"http://www.cisco.com\" target=\"_blank\">\n                    <span class=\"icon-cisco\"></span>\n                </a>\n            </div>\n            <div class=\"header-panel header-panel--right hidden-md-down\">\n                \n                <a *ngIf=\"isLoggedIn\" routerLink=\"connector\" class=\"header-item\">Connector</a>\n                <a *ngIf=\"isLoggedIn\" routerLink=\"endpoint\" class=\"header-item\">Endpoints</a>\n                <a *ngIf=\"isLoggedIn\" routerLink=\"GridView\" class=\"header-item\">Grid View</a>\n                <a routerLink=\"help\" class=\"header-item\">Help</a>\n                <a routerLink=\"support\" class=\"header-item\">Support</a>\n                <a routerLink=\"about\" class=\"header-item\">About</a>\n                <a *ngIf=\"isLoggedIn\"  (click)=\"loginButton()\"  class=\"header-item\">Logout</a>\n                <a *ngIf=\"!isLoggedIn\" (click)=\"loginButton()\" class=\"header-item\">Login</a>\n            </div>\n        </div>\n    </div>\n</nav>\n<router-outlet></router-outlet>","export class GlobalConstants {\n  public static isLoggedIn = false;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-endpoint',\n  templateUrl: './endpoint.component.html',\n  styleUrls: ['./endpoint.component.css']\n})\nexport class EndpointComponent implements OnInit {\n  isworking = true;\n  isLoggedIn: boolean;\n  showTab1 = true;\n  showTab2: boolean;\n  endpoints: any = [];\n  endpoint: any = {};\n  basicAuth: any = {};\n  myConsole: any = '';\n  base64ValuePlaceholder: any = '';\n\n  constructor(private restService: RestserviceService) {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('EndpointComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n    this.myConsole = '';\n    this.getBasicAuth();\n    this.getEndpoints();\n  }\n\n  showServerTabButton(tab: string): void {\n    console.log('EndpointComponent: showServerTabButton');\n    this.myConsole = '';\n    this.showTab1 = false;\n    this.showTab2 = false;\n\n    if (tab === 'tab1') {\n      this.showTab1 = true;\n    }\n    if (tab === 'tab2') {\n      this.showTab2 = true;\n    }\n  }\n\n  addEndpoint(): void {\n    console.log('EndpointComponent: addEndpoint');\n    this.myConsole = '';\n    this.showServerTabButton('tab1');\n    const newEndpoint: any = {};\n    newEndpoint.name = this.uuidv4();\n    newEndpoint.endpoint = '/rest/webexcc/' + newEndpoint.name;\n    newEndpoint.nameValueList = [];\n    this.endpoints.push(newEndpoint);\n    this.endpoint = newEndpoint;\n    this.endpoint.query = 'select ${ani}';\n    this.addNameValuePair({ name: 'ani', value: '1234567890' });\n    this.highlightEndpoint();\n  }\n\n  deleteEndpoint(index: any): void {\n    console.log('EndpointComponent: deleteEndpoint:', index);\n    const answer = window.confirm('Are sure you want to delete this item ?');\n    if (answer) {\n      this.isworking = true;\n      this.myConsole = '';\n      this.restService.deleteEndpoint(this.endpoints[index])\n        .subscribe(data => {\n          this.basicAuth = data;\n          if (this.basicAuth.Exception) {\n            this.myConsole = atob(this.myConsole.Exception);\n          } else {\n            this.myConsole = 'Basic authentication was loaded.\\n';\n          }\n          this.endpoints.splice(index, 1);\n          this.isworking = false;\n        });\n    } else {\n      console.log('EndpointComponent: deleteEndpoint: NOT');\n    }\n  }\n\n\n  addNameValuePair(nameValue: any): void {\n    console.log('EndpointComponent: addNameValue:');\n    this.myConsole = '';\n    this.endpoint.nameValueList.push(nameValue);\n  }\n\n  deleteNameValuePair(index: any): void {\n    console.log('EndpointComponent: deleteNameValuePair:');\n    const answer = window.confirm('Are sure you want to delete this item ?');\n    if (answer) {\n      this.myConsole = '';\n      this.endpoint.nameValueList.splice(index, 1);\n      this.myConsole = 'Name value pair deleted';\n    } else {\n      console.log('EndpointComponent: deleteNameValuePair: NOT');\n    }\n  }\n\n  getBasicAuth(): void {\n    console.log('EndpointComponent: getBasicAuth');\n    this.myConsole = '';\n    this.restService.getBasicAuth()\n      .subscribe(data => {\n        this.basicAuth = data;\n        if (this.basicAuth.Exception) {\n          this.myConsole = atob(this.myConsole.Exception);\n        } else {\n          this.myConsole = 'Basic authentication was loaded.\\n';\n        }\n        this.updateBasicAuthValue();\n      });\n  }\n\n  getEndpoints(): void {\n    console.log('EndpointComponent: getEndpoints');\n    this.myConsole = '';\n    this.restService.getEndpoints()\n      .subscribe(data => {\n        this.endpoints = data;\n        if (this.endpoints.Exception) {\n          this.myConsole = atob(this.myConsole.Exception);\n        } else {\n          this.myConsole += 'Endpoints were loaded.\\n';\n        }\n        if (this.endpoints[0] != null) {\n          this.endpoint = this.endpoints[0];\n          this.endpoint.isHighlighted = true;\n        }\n        this.isLoggedIn = true;\n        this.isworking = false;\n      });\n  }\n\n\n  uuidv4(): string {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n\n  saveBasicAuthentication(): void {\n    console.log('EndpointComponent: saveBasicAuthentication');\n    this.isworking = true;\n    this.myConsole = '';\n    this.restService.saveBasicAuthentication(this.basicAuth)\n      .subscribe(data => {\n        this.myConsole = data;\n        if (this.myConsole.Exception) {\n          this.myConsole = 'Exception:\\n' + atob(this.myConsole.Exception);\n        } else {\n          this.myConsole = this.myConsole.response;\n        }\n        this.isworking = false;\n      });\n  }\n\n  isNameValuePairValid(): boolean {\n    let check = true;\n    this.endpoint.nameValueList.forEach((nameValue) => {\n      if (nameValue.name == null || nameValue.name === undefined || nameValue.name.length < 1) {\n        alert('Invalid name value pair:\\n Name can\\'t be blank.');\n        check = false;\n      } else if (!isNaN(nameValue.name)) {\n        alert('Invalid name value pair:\\nName can\\'t be a number.');\n        check = false;\n      } else if (/^[0-9-]/.test(nameValue.name)) {\n        alert('Invalid name value pair:\\nName can\\'t start with a number or dash');\n        check = false;\n      } else if (/[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,.<>\\/?]/g.test(nameValue.name)) {\n        alert('Invalid name value pair:\\nName can only contain the following characters be a-z A-Z 0-9.');\n        check = false;\n      }\n    });\n    return check;\n  }\n\n\n  saveEndpointAndTest(): void {\n    console.log('EndpointComponent: saveEndpointAndTest');\n    this.myConsole = '';\n    this.endpoint.isHighlighted = undefined;\n    if (!this.isNameValuePairValid()) {\n      return;\n    }\n    this.isworking = true;\n\n    this.restService.saveEndpointAndTest(this.endpoint)\n      .subscribe(data => {\n        this.myConsole = data;\n        if (this.myConsole.Exception) {\n          this.myConsole = 'Exception:\\n' + atob(this.myConsole.Exception);\n        } else {\n          const response = this.myConsole.response;\n          const params = atob(this.myConsole.httpParams);\n          const sqlStatement = atob(this.myConsole.sqlStatement);\n          const authentication = this.myConsole.authentication;\n          const jsonResponse = atob(this.myConsole.jsonResponse);\n          this.myConsole = response + '\\n';\n          this.myConsole += 'Endpoint authentication is active:' + authentication + '\\n';\n          this.myConsole += 'Request:\\n';\n          this.myConsole += location.origin + this.endpoint.endpoint + params + '\\n';\n          this.myConsole += 'Response:\\n';\n          this.myConsole += jsonResponse + '\\n';\n          this.myConsole += 'SQL:\\n';\n          this.myConsole += sqlStatement + '\\n';\n        }\n        this.endpoint.isHighlighted = true;\n        this.isworking = false;\n      });\n  }\n\n  updateBasicAuthValue(): void {\n    console.log('EndpointComponent: basicAuthValue');\n    this.myConsole = '';\n    if (this.basicAuth.username.length < 12 || this.basicAuth.password.length < 12) {\n      this.base64ValuePlaceholder = 'username and password must be 12 charactors';\n      this.basicAuth.value = '';\n    } else {\n      this.basicAuth.value = btoa(this.basicAuth.username + ':' + this.basicAuth.password);\n    }\n  }\n\n  selectEndpoint(endpoint: any): void {\n    console.log('EndpointComponent: selectEndpoint');\n    this.myConsole = '';\n    this.endpoint = endpoint;\n    this.highlightEndpoint();\n  }\n\n  setBasicAuthenticationRequired(event: any): void {\n    console.log('EndpointComponent: setBasicAuthenticationRequired');\n    this.saveBasicAuthentication();\n  }\n\n  highlightEndpoint(): void {\n    console.log('EndpointComponent: highlightEndpoint');\n    this.endpoints.forEach((endpoint: any) => {\n      // console.warn('endpoint:', endpoint);\n      endpoint.isHighlighted = false;\n    });\n    this.endpoint.isHighlighted = true;\n  }\n\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<div *ngIf=\"isLoggedIn\" class=\"container\">\n\t<div *ngIf=\"isworking\" class=\"loader\" aria-label=\"Loading, please wait...\"\n\t\tstyle=\"position: absolute;  width: 70px;  height: 70px;  z-index: 15;  top: 50%;  left: 50%;  margin: -100px 0 0 -150px;\">\n\t\t<div class=\"wrapper\">\n\t\t\t<div class=\"wheel\"></div>\n\t\t</div>\n\t</div>\n\t<div class=\"row\">\n\t\t<div   *ngIf=\"endpoints.length > 0\"   class=\"col\">\n\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t<h2 class=\"subtitle\">Endpoints</h2>\n\t\t\t\t<hr>\n\t\t\t\t<div class=\"section\">\n\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\n\t\t\t\t\t\t<div class=\"form-group__check\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" class=\"form-check-input\" id=\"BasicAuthenticationisRequired\"\n\t\t\t\t\t\t\t\t[checked]=\"basicAuth.isBasicAuthenticationRequired\"\n\t\t\t\t\t\t\t\t[(ngModel)]=\"basicAuth.isBasicAuthenticationRequired\" \n\t\t\t\t\t\t\t\t(change)=\"setBasicAuthenticationRequired($event);showServerTabButton('tab1'); \"\n\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\">\n\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"BasicAuthenticationisRequired\">Basic Authentication is\n\t\t\t\t\t\t\t\tRequired</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul id=\"embossed\" class=\"tabs tabs--embossed\">\n\t\t\t\t\t\t<li (click)=\"showServerTabButton('tab1')\" id=\"embossed-1\" class=\"tab \">\n\t\t\t\t\t\t\t<a tabindex=\"0\">Endpoint</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li *ngIf=\"basicAuth.isBasicAuthenticationRequired\" (click)=\"showServerTabButton('tab2')\" id=\"embossed-2\" class=\"tab\">\n\t\t\t\t\t\t\t<a tabindex=\"0\">Authentication</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<div id=\"embossed-content\" class=\"tab-content\">\n\t\t\t\t\t\t<div *ngIf=\"showTab1\" id=\"embossed-1-content\" class=\"tab-pane active\">\n\t\t\t\t\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t\t\t\t\t<!-- <h2 class=\"subtitle\">Endpoint</h2> -->\n\t\t\t\t\t\t\t\t<!-- <hr> -->\n\t\t\t\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-endpoint\" [(ngModel)]=\"endpoint.endpoint\" readonly\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-endpoint\">endpoint</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Description\" [(ngModel)]=\"endpoint.description\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\taria-placeholder=\"Enter description\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter description\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Description\">Description</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t\t\t\t\t\t<!-- <div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 class=\"subtitle\">Name Value List</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> -->\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"addNameValuePair({})\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn--link \">[+]</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-4 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-2 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tparameters\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-4 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tValue\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"row\"\n\t\t\t\t\t\t\t\t\t\t\t\t*ngFor=\"let nameValue of endpoint.nameValueList; index as i;\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button (click)=\"deleteNameValuePair(i)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"btn btn--link btn-sm\">[-]</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-NamePair_name{{i}}\" [(ngModel)]=\"nameValue.name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-ValuePair_value{{i}}\" [(ngModel)]=\"nameValue.value\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Query\" [(ngModel)]=\"endpoint.query\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Query\">Query</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Username\">Console</label>\n\t\t\t\t\t\t\t\t\t\t<textarea id=\"textarea-state-default\" class=\"text-white\" readonly\n\t\t\t\t\t\t\t\t\t\t\tstyle=\"background-color: #000000;width: 100%;\"\n\t\t\t\t\t\t\t\t\t\t\trows=\"8\">{{myConsole}}</textarea>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"saveEndpointAndTest()\" class=\"btn btn--ghost\" [disabled]=\"isworking\" >Save and Test\n\t\t\t\t\t\t\t\t\t\t\tEndpoint</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div *ngIf=\"showTab2\" id=\"embossed-2-content\" class=\"tab-pane active\">\n\t\t\t\t\t\t\t<div class=\"panel panel--loose panel--raised base-margin-bottom\">\n\t\t\t\t\t\t\t\t<h2 class=\"subtitle\">Basic Authentication for Endpoints</h2>\n\t\t\t\t\t\t\t\tApplies to all endpoints\n\t\t\t\t\t\t\t\t<hr>\n\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t<div class=\"form-group base-margin-bottom\">\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Username\" placeholder=\"must be atleast 12 charactors\"\n\t\t\t\t\t\t\t\t\t\t\t(change)=\"updateBasicAuthValue()\" [(ngModel)]=\"basicAuth.username\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Username\">Username</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Password\" placeholder=\"must be atleast 12 charactors\"\n\t\t\t\t\t\t\t\t\t\t\t(change)=\"updateBasicAuthValue()\" [(ngModel)]=\"basicAuth.password\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\">\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Password\">Password</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<input id=\"input-type-Base64Value\" placeholder=\"{{base64ValuePlaceholder}}\"\n\t\t\t\t\t\t\t\t\t\t\t(change)=\"updateBasicAuthValue()\" [(ngModel)]=\"basicAuth.value\"\n\t\t\t\t\t\t\t\t\t\t\t[ngModelOptions]=\"{standalone: true}\" type=\"text\" readonly>\n\t\t\t\t\t\t\t\t\t\t<label for=\"input-type-Base64Value\">Base64 Value</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<!--  -->\n\t\t\t\t\t\t\t\t\t<div class=\"form-group__text\">\n\t\t\t\t\t\t\t\t\t\t<p></p>\n\t\t\t\t\t\t\t\t\t\t<button (click)=\"saveBasicAuthentication()\" class=\"btn btn--ghost\">Save Basic\n\t\t\t\t\t\t\t\t\t\t\tAuthentication</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<h4>Current Endpoints</h4>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<label><button (click)=\"addEndpoint()\" class=\"btn btn--ghost\">add</button></label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<!-- space -->\n\t\t\t\t\t<hr>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col\">\n\t\t\t\t\t<div \n\t\t\t\t\t[ngClass]=\"{'bg-primary': endpoint.isHighlighted === true}\"\n\t\t\t\t\t*ngFor=\"let endpoint of endpoints; index as i;\" (click)=\"selectEndpoint(endpoint)\">\n\t\t\t\t\t\t<div (click)=\"deleteEndpoint(i)\" class=\"alert__icon icon-error-outline\"> </div>\n\t\t\t\t\t\t{{endpoint.endpoint}}<br>\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{endpoint.description}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { AppComponent } from './app.component';\nimport { ConnectorComponent } from './connector/connector.component';\nimport { EndpointComponent } from './endpoint/endpoint.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HelpComponent } from './help/help.component';\nimport { SupportComponent } from './support/support.component';\nimport { AboutComponent } from './about/about.component';\nimport { LoginComponent } from './login/login.component';\nimport { LoggedinComponent } from './loggedin/loggedin.component';\nimport { GridViewComponent } from './grid-view/grid-view.component';\n// import { GlobalConstants } from './global-constants';\n\n\n@NgModule({\n  declarations: [\n    // GlobalConstants,\n    AppComponent,\n    ConnectorComponent,\n    EndpointComponent,\n    LogoutComponent,\n    HelpComponent,\n    SupportComponent,\n    AboutComponent,\n    LoginComponent,\n    LoggedinComponent,\n    GridViewComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: '', component: AppComponent },\n      { path: 'logout', component: LogoutComponent },\n      { path: 'help', component: HelpComponent },\n      { path: 'support', component: SupportComponent },\n      { path: 'about', component: AboutComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'connector', component: ConnectorComponent },\n      { path: 'endpoint', component: EndpointComponent },\n      { path: 'loggedin', component: LoggedinComponent },\n      { path: 'GridView', component: GridViewComponent },\n    ]),\n  ],\n  exports: [RouterModule],\n  providers: [ CookieService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\n// import { HttpClient, , HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, Subject } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n// import { Location } from '@angular/common';\n// import { Router } from '@angular/router';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({\n//     'Set-Cookie': 'SameSite=Strict; Secure',\n//   })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestserviceService {\n\n  constructor(private http: HttpClient) { }\n  public static isLoggedIn = false;\n  public onLoginChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n\n\n\n  public logout() {\n    console.log('RestserviceService: mylogout');\n    return this.http.get<any[]>('/mylogout').subscribe(response => {\n        RestserviceService.isLoggedIn = false;\n        this.onLoginChange.emit(RestserviceService.isLoggedIn);\n    });\n  }\n\n\n  public getUser() {\n    console.log('RestserviceService: getUser');\n    return this.http.get<any[]>('/user').pipe(\n      //catchError(this.handleError)\n    );\n  }\n\n  public isAuthenticated() {\n    console.log('RestserviceService: isAuthenticated');\n    this.getUser().subscribe(data => {\n      // console.warn('restService.getUser:1', data);\n      if (data == null) {\n        RestserviceService.isLoggedIn = false;\n      } else {\n        const response: any = data;\n        // console.log('RestserviceService.getUser: data', data, response);\n        if (response === true) {\n          // console.log('RestserviceService: isAuthenticated: YES');\n          RestserviceService.isLoggedIn = true;\n          // this.onLoginChange.emit(true);\n        } else {\n          // console.log('RestserviceService: isAuthenticated: NO');\n          RestserviceService.isLoggedIn = false;\n        }\n      }\n      this.onLoginChange.emit(RestserviceService.isLoggedIn);\n    });\n  }\n\n  public getIsLoggedIn(): boolean {\n    console.log('RestserviceService: getIsLoggedIn');\n    return RestserviceService.isLoggedIn;\n  }\n\n\n  public getConnector() {\n    return this.http.get<any[]>('/rest/connector').pipe(\n      catchError(this.handleError)\n    );\n  }\n  public getConnectorByServerType(serverType: string) {\n    return this.http.get<any[]>('/rest/connector/' + serverType).pipe(\n      catchError(this.handleError)\n    );\n  }\n  public postConnector(connector: any) {\n    return this.http.post<any[]>('/rest/connector', connector).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public getBasicAuth() {\n    return this.http.get<any[]>('/rest/basicauth').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public getEndpoints() {\n    return this.http.get<any[]>('/rest/endpoints').pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  public executeEndPoint(endpointName: any) {\n    return this.http.get<any[]>('/rest/webexcc/' + endpointName).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public saveBasicAuthentication(basicAuth: any) {\n    return this.http.post<any[]>('/rest/basicauth', basicAuth).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public saveEndpointAndTest(endpoint: any) {\n    return this.http.post<any[]>('/rest/endpoint', endpoint).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  public deleteEndpoint(endpoint: any) {\n    return this.http.delete<any[]>('/rest/endpoint/' + endpoint.name).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    console.warn('RestserviceService: private handleError: 1 :', error);\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.warn('RestserviceService: private handleError: 2:', error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.warn('RestserviceService: private handleError: 3 :Backend returned code ' + error.status + ' ' + 'body was: ' + error.error);\n      if (error.status === 0) {\n        console.warn('RestserviceService: private handleError: 3b redirect to /login');\n        location.assign('/oauth2/authorization/dbconnector');\n      }\n    }\n    // Return an observable with a user-facing error message.\n    return throwError('{\"Exception\":\" ' + window.btoa('Something bad happened; please try again later.') + '\"}');\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-loggedin',\n  templateUrl: './loggedin.component.html',\n  styleUrls: ['./loggedin.component.css']\n})\n\nexport class LoggedinComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>loggedin works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\n\nexport class HelpComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('HelpComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>help works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RestserviceService } from '../restservice.service';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-grid-view',\n  templateUrl: './grid-view.component.html',\n  styleUrls: ['./grid-view.component.css']\n})\nexport class GridViewComponent implements OnInit {\n  isLoggedIn: boolean;\n  endPoint: any = [];\n  endpoints: any = [];\n  endpoint: any = {};\n  basicAuth: any = {};\n  selectedEndPoint = '';\n  records: any = [{}];\n  headers: any = [];\n  isworking = true;\n\n  constructor(private restService: RestserviceService) {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    this.getBasicAuth();\n    this.getEndpoints();\n\n  }\n  getBasicAuth(): void {\n    console.log('GridViewComponent: getBasicAuth');\n    this.restService.getBasicAuth()\n      .subscribe(data => {\n        this.basicAuth = data;\n      });\n  }\n\n  getEndpoints(): void {\n    console.log('GridViewComponent: getEndpoints');\n    this.restService.getEndpoints()\n      .subscribe(data => {\n        this.endpoints = data;\n        console.log('GridViewComponent: getEndpoints', this.endpoints);\n        this.isLoggedIn = true;\n        this.isworking = false;\n      });\n  }\n  executeEndPoint(event: any) {\n    console.log('GridViewComponent: executeEndPoint', event.target.value);\n    let tmp: any = [];\n    this.records = [];\n    this.restService.executeEndPoint(event.target.value)\n      .subscribe(data => {\n        const check: any = data;\n        if (check.length > 0) {\n          tmp = data;\n        } else {\n          tmp.push(data);\n        }\n        let count = 0;\n        tmp.forEach((element: {}) => {\n          if (count++ === 0) {\n            this.headers = Object.keys(element);\n          }\n          this.records.push(Object.values(element));\n          console.log('GridViewComponent: executeEndPoint: this.records4: ', Object.values(element));\n        });\n\n      });\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"container\">\n\n\n  <div class=\"row\">\n    <div class=\"col-sm\">\n    </div>\n    <div class=\"col-sm\">\n      <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n          <label class=\"input-group-text\" for=\"inputGroupSelect01\">Select endPoint</label>\n        </div>\n        <select (change)=\"executeEndPoint($event)\" [(ngModel)]=\"selectedEndPoint\" id=\"input-type-select\">\n          <option value=\"Choose\">Choose...</option>\n          <option *ngFor=\"let endpoint of endpoints; index as i;\" value=\"{{endpoint.name}}\">{{endpoint.description}}\n          </option>\n        </select>\n\n      </div>\n    </div>\n    <div class=\"col-sm\">\n    </div>\n  </div>\n  <p>&nbsp;</p>\n  <div class=\"row text-left\">\n    <div class=\"col\">&nbsp;</div>\n    <div class=\"col\">\n      <table *ngIf=\"headers.length > 0\" class=\"table table--lined table--selectable\" aria-label=\"Selectable rows table example\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th *ngFor=\"let header of headers;\" scope=\"col\">{{header}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let record of records; index as i;\">\n            <th scope=\"row\">{{(i + 1)}}</th>\n          <td *ngFor=\"let column of record; index as i2;\">{{column}} </td>\n          </tr>\n\n        </tbody>\n      </table>\n    </div>\n    <div class=\"col\">&nbsp;</div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n  isLoggedIn: boolean;\n  message: any;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n\n  }\n\n  ngOnInit() {\n    console.log('LogoutComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n    this.message = '';\n  }\n\n  myLogout(): void {\n    console.log('LogoutComponent: myLogout');\n    window.location.href = '/oauthLogout' ;\n\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<section *ngIf=\"message.length == 0\" class=\"text-center\">\n\t<form>\n\t\t<h2 class=\"form-signin-heading\">Are you sure you want to log out?</h2>\n\t\t<input name=\"_csrf\" type=\"hidden\" value=\"${_csrf.token}\">\n\t\t<button (click)=\"myLogout()\" class=\"btn btn-lg btn-primary btn-block\" type=\"button\">Log Out</button>\n\t</form>\n</section>\n<section *ngIf=\"message.length > 0\" class=\"text-center\">\n\t{{message}}\n</section>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  clickMe(event: Event) {\n    console.log('clickMe', event);\n  }\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n\n<section class=\"h-100\">\n\t<header class=\"container h-100\">\n\t\t<div class=\"d-flex align-items-center justify-content-center h-100\">\n\t\t\t<div class=\"d-flex flex-column\">\n\t\t\t\t<div class=\"text-center\">\n\t\t\t\t\t<h2 class=\"subtitle\"></h2>\n\t\t\t\t\t<div class=\"section\">\n\t\t\t\t\t\t<button class=\"btn btn--ghost\" (click)=\"clickMe($event)\">Login</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</header>\n</section>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\nimport { GlobalConstants } from '../global-constants';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.css']\n})\n\nexport class SupportComponent implements OnInit {\n  isLoggedIn: boolean;\n\n  constructor() {\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n  ngOnInit() {\n    console.log('SupportComponent: ngOnInit', this.isLoggedIn);\n    this.isLoggedIn = GlobalConstants.isLoggedIn;\n  }\n\n}\n","<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>support works!</p>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}